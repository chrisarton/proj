<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid d-flex justify-content-between align-items-center">
        <a class="navbar-brand" href="">ExTrace</a>
        <div>
            <AuthorizeView Context="auth">
                <Authorized>
                    <span class="text-white me-3">@auth.User.Identity?.Name</span>
                    <button class="btn btn-sm btn-secondary" @onclick="Logout">Logout</button>
                </Authorized>
                <NotAuthorized>
                    <a class="btn btn-sm btn-primary" href="login">Login</a>
                </NotAuthorized>
            </AuthorizeView>
        </div>
    </div>
    
    
</div>

<input type="checkbox" title="Navigation menu" class="navbar-toggler" />

<div class="nav-scrollable" onclick="document.querySelector('.navbar-toggler').click()">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> Home
            </NavLink>
        </div>

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="counter">
                <span class="bi bi-plus-square-fill-nav-menu" aria-hidden="true"></span> Counter
            </NavLink>
        </div>

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="weather">
                <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> Weather
            </NavLink>
        </div>

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="register">
                <span class="bi bi-person-plus-fill-nav-menu" aria-hidden="true"></span> Register
            </NavLink>
        </div>
    </nav>
</div>

@code {
    [Inject] public ExTrace.Shared.Services.IAuthService? SharedAuth { get; set; }
    [Inject] public AuthenticationStateProvider? AuthStateProvider { get; set; }

    private async Task Logout()
    {
        if (SharedAuth is not null)
        {
            await SharedAuth.LogoutAsync();
        }
        if (AuthStateProvider is ExTrace.Shared.Services.JwtAuthenticationStateProvider jwtProvider)
        {
            jwtProvider.NotifyAuthenticationStateChangedTrigger();
        }
    }
}
